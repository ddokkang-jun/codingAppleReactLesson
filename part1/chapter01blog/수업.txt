
8강. 리액트 환경에서 동적인 UI 만드는 법(모달창 만들기)




1. html css로 미리 디자인 완성

2. UI의 현재 상태를 state로 저장

> useState('현재상태') = 0,1 or true, false or 보임,안보임  or 열림,닫힘...등등 형식은 자유.

3. state에 따라 UI가 어떻게 보일지 작성



let [modal, setModal] = useState('닫힘');
let [modal, setModal] = useState(0);
'닫힘'/'열림

0/1

아무렇게나 표현해도 상관없습니다. 저는 true/false로 표현해볼 것임

(true false는 참 거짓을 담을 수 있는 boolean이라는 자료형입니다)




function App (){

  let [modal, setModal] = useState(false);
  return (
    저 state가 true면 <Modal></Modal>
    false면 아무것도 보여주지마세요
  )
}
이렇게 코드짜라는 소리입니다. 

프로그래밍할 때 "이 경우엔 이렇게 해주세요~" 라고 코드짜고 싶으면 if 조건문을 사용합니다. 





function App (){

  let [modal, setModal] = useState(false);
  return (
    <div className="app">
      (생략)
      {
        modal == true ? <Modal></Modal> : null
      }
    </div>
  )
}
이렇게 코드짜면 됩니다. 

null은 그냥 아무 html도 남기기 싫을 때 쓰는 자료입니다. null은 텅 비었다는 뜻임 

이제 3-step 끝입니다.






이번 수업 숙제는 글제목을 클릭하면 state값을 toggle 해줘서 Modal컴포넌트를 보여주게 하고 다시 닫아주고

였는데, 이문제의 해결법은? let [modal, setModal] = useState(false);

글제목 onClick={( )=>{ setModal(!modal) }}

// ! 느낌표를 달아주자. 

하면 됨.....

-------------------------------------------------------------------------------

12강. input 1: 사용자가 입력한 글 다루기




이번 강의에서 알게 된 내용중 몰랐던것?

이벤트버블링 : onClick()을 사용할 때 보면 e.target => 어느 html에서 클릭이 되었는지를 알 수 있다.

그런데? <div><h4><span></span></h4></div>

span에서 onClick을 해주면 모든 상위 html에 클릭이 진행되게 되는데 이것을 이벤트 버블링이라 한다.

onClick이벤트를 처리 할때 onClick={(e)=>{e.stopPropagation()}} 하면 

이벤트버블링을 막아줄 수 있다. 

오늘의 숙제 :

1번 문제 : input으로 입력받은 내용을 화면에 새로운 게시물로 보여주자.

2번 문제 : 게시물 오른쪽에 게시물 삭제 버튼을 만들고 기능을 만들어주자.

 < 숙제 2번 문제 :

 < 배열에서 내가 원하는 값을 삭제 하고자 할때 어떻게 처리하면 좋을까???

 < 내가 한 것과 다르게 처리해서 기록을 남긴다.

 < 참고로 나는 filter( )함수를 사용해서 내가 원하는 값과 다른 아이들만 render하도록 했다.

 < 다른 방법 : splice( ) 함수 사용하기 :

버튼태그에서 

<button onClick={ ( ) => {
	let copy = [...title];
	copy.splice( i, 1 );
	setTitle(copy);
	}} />
해준다. 끝~~~~

-------------------------------------------------------------------------------




