input 다루기 2 : 블로그 글발행 기능 만들기





오늘은 새로운 내용은 없고 저번시간 숙제 2개를 풀어보고 지나갑시다.

여러분 코드가 의도대로 잘 동작한다면 맞는 답안이니까 그냥 다음으로 넘어가셔도 무방합니다.

답은 언제나 하나가 아닙니다.

 

 

 

 

숙제1. 버튼누르면 유저가 입력한 글을 글목록에 추가해주세요

 

그럼 이렇게 코드짜면 되겠군요 

"버튼누르면 유저가 입력한 글 가져와서 그걸로 html을 하나 생성해주세요~"

근데 이건 쌩자바스크립트 방식이고 리액트는 스위치와 전등 만들어놓고 state만 만지면 된다고 했습니다. 

 

"버튼누르면 유저가 입력한 글 가져와서 글제목 state에 넣어주세요"

이렇게 코드짜면 끝입니다. 

왜냐면 지금 글제목.map() 이렇게 코드짠 덕분에 글제목 state 갯수에 맞게 html이 알아서 생성되고 있으니까요. 

 

 

 

 

function App (){
  let [글제목, 글제목변경] = useState(['남자코트추천', '강남우동맛집', '파이썬독학']);
  let [입력값, 입력값변경] = useState('');
  return (
    <div>
      <input onChange={ (e)=>{ 입력값변경(e.target.value) } } />
      <button onClick={()=>{ 
        ???
      }}>글발행</button>
    </div>
  )
}

▲ 글발행 버튼을 하나 만들었는데 이거 누르면 어떤 코드를 실행하면 될까요?

이제 리액트 기초문법시간이 끝났기 때문에 

리액트 지능이 상승할 마지막 기회니까 아직 안해봤다면 직접 해봅시다.

 

전 이렇게 했는데
 

function App (){
  let [글제목, 글제목변경] = useState(['남자코트추천', '강남우동맛집', '파이썬독학']);
  let [입력값, 입력값변경] = useState('');
  return (
    <div>
      <input onChange={ (e)=>{ 입력값변경(e.target.value) } } />
      <button onClick={()=>{ 
        let copy = [...글제목];
        copy.unshift(입력값);
        글제목변경(copy)
      }}>글발행</button>
    </div>
  )
}

발행버튼누르면 글제목state에 유저가 입력한값만 하나 끼워넣으면 됩니다. 

1. 버튼누르면 일단 글제목state를 카피부터했습니다. array 형태의 state 조작은 우선 카피부터하면 된댔습니다.

2. 카피한거에 unshift(입력값) 해줬는데 이게 뭐냐면 array자료 맨 앞에 자료추가하는 문법입니다.

3. 그리고 state변경함수 사용했습니다.

 

그럼 이제 <input>에 뭐 입력하고 발행버튼 누르면 글이 진짜로 발행되는 것 같은 기능이 완성됩니다.

 

 

 

 

 

Q. 저는 state, sprops, component, map 전부 아는데 코드를 못짜겠어요 뭐임?

A. 그것은 리액트를 못하는게 아니라 프로그래밍 기초가 부실할 뿐이니 안심하셔도 됩니다. 

 

 

 

Q. 왜 새로고침하면 없어지죠?

원래 브라우저는 새로고침하면 html, js 파일을 다시 읽습니다. 

다시 읽으면 state나 변수같은 것들도 초기값으로 변경됩니다. 원래그럼 

그래서 실제 서비스였으면 우선 서버로 보내서 DB에 영구저장을 하거나 그랬겠지만

갑자기 서버와 DB 가르치려면 20강 추가해야하니까 프론트엔드에서만 잘 구현해보면 됩니다. 

 



 

 

 

 

 

 

숙제2. 글마다 삭제버튼과 기능만들기

 

map 반복문안에 버튼부터 만들면 됩니다.

그 다음에 버튼누르면 

"<div> 하나를 삭제해주세요~" 라고 코드짜는건 틀딱자바스크립트 방식이고

"state에서 글을 삭제해주세요~" 라고 코드짜는건 리액트방식입니다. 

리액트방식으로 코드짜보면 됩니다. 

 

 

 

function App (){
  let [글제목, 글제목변경] = useState(['남자코트추천', '강남우동맛집', '파이썬독학']);
  let [입력값, 입력값변경] = useState('');
  return ( 
    <div>
    { 
     글제목.map(function(a, i){
        return (
          <div className="list">
            <h4>{ 글제목[i] }</h4>
            <p>2월 18일 발행</p>
            <button onClick={()=>{ ? }}>삭제</button>
          </div> 
        )
     }) 
    }  
  </div>
  )
}

▲ 삭제버튼을 글마다 추가해놨는데 이거 누르면 어떤 코드를 실행하면 될까요? 

역시 마지막 찬스입니다. 

 

모르는게 나오면 검색해보면 됩니다
 

array자료에서 x번째 데이터를 삭제하고 싶으면

array자료.splice(x, 1) 이라고 사용하면 된다는군요. 

 

 

function App (){
  let [글제목, 글제목변경] = useState(['남자코트추천', '강남우동맛집', '파이썬독학']);
  let [입력값, 입력값변경] = useState('');
  return ( 
    <div>
    { 
     글제목.map(function(a, i){
        return (
          <div className="list">
            <h4>{ 글제목[i] }</h4>
            <p>2월 18일 발행</p>
            <button onClick={()=>{ 
              let copy = [...글제목];
              copy.splice(i, 1);
              글제목변경(copy);
           }}>삭제</button>
          </div> 
        )
     }) 
    }  
  </div>
  )
}
1. 일단 버튼누르면 글제목state 사본부터 만들었습니다.

2. 글제목state에서 x번째 데이터를 삭제하고 싶으면 splice(x, 1) 쓰면 된댔습니다.

그래서 저렇게 써봤습니다. 

 

그럼

0번째 삭제버튼 누르면 copy.splice(0, 1) 해주니까 0번글이 없어집니다.

1번째 삭제버튼 누르면 copy.splice(1, 1) 해주니까 1번글이 없어집니다.

2번째 삭제버튼 누르면 copy.splice(2, 1) 해주니까 2번글이 없어집니다.

 

진짜 그런가 테스트해봅시다.

 

 

 

응용1. 글에 아무것도 입력안하고 발행버튼 누르는거 막으려면? 

유저의 의도치않은 행동을 막는 코드도 많이 짜야 안전한 사이트가 됩니다. 

 

응용2. 글을 하나 추가하면 따봉갯수 개별적용하던 것도 이상해질 수 있습니다.

어떻게 해결하면 될까요? 

아마 글이 하나 추가되면 따봉기록할 곳도 하나 더 만들어줘야할듯요.

 

응용3. 날짜데이터는?

state에 글만 저장되어있는데 날짜같은 것도 저장해두고 보여주는 식으로 하면 재밌을 것 같군요. 

자바스크립트로 현재 날짜같은 것도 출력해볼 수 있어서 글 발행시 그런 기능을 더해줄 수도 있겠네요.  